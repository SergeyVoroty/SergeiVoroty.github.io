
mixin textField(def)
    -let textFieldClass = 'textField'
    -textFieldClass += def ? ' textField_default' : ''

    .textFieldBorder
        input(class= textFieldClass, type= 'email', placeholder= 'Email')

mixin button(options)
    -var buttonClass = 'btn'
    case options.type
        when 'fillButton'
            -buttonClass += ' btn_default'
            if options.long
                -buttonClass += ' btn_long'
        when 'borderedButton'
            -buttonClass += ' btn_bordered'
        when 'goestButton'
            -buttonClass += ' btn_goest'
        default
            -buttonClass += ' btn_default'

    input(type= 'button' value= options.title class= buttonClass)


mixin textField(options)
    -var textfieldClass = 'textfield'
    case options.type
        when 'Default'
            -textfieldClass += ' textfield_default'
        when 'Dropdown'
            -textfieldClass += ' textfield_dropdown'
        when 'Masked'
            -textfieldClass += ' textfield_masked'
        when 'DateDropdown'
            -textfieldClass += ' texfield_dateDropdown'
        when 'FilterDateDropdown'
            -textfieldClass += ' texfield_filter_dateDropdown'
        when 'SubscriptionTextField'
            -textfieldClass += ' textfield_subscription'

    input(type= 'textfield')